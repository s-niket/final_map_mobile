sudo: required
language: cpp
services:
  - docker
  
env:
  global:
    - toolset_branch: master
    - server_type: travis
    - ros_release_name: kinetic
    - ubuntu_version_name: xenial
    - used_modules: build, check_cache, check_build, code_style_check, check_deb_make #, codecov_tool
    - remote_shell_script: 'https://raw.githubusercontent.com/shadow-robot/sr-build-tools/$toolset_branch/bin/sr-run-ci-build.sh'

script:
  - curl -s "$( echo "$remote_shell_script" | sed 's/#/%23/g' )" | bash -x /dev/stdin "$toolset_branch" $server_type $used_modules
  


# # Use ubuntu trusty (14.04) with sudo privileges.
# dist: trusty
# sudo: required
# language:
#   - generic
# cache:
#   - apt

# # Configuration variables. All variables are global now, but this can be used to
# # trigger a build matrix for different ROS distributions if desired.
# env:
#   global:
#     - ROS_DISTRO=indigo
#     - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
#     - CI_SOURCE_PATH=$(pwd)
#     - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
#     - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
#     - ROS_PARALLEL_JOBS='-j8 -l6'

# ################################################################################

# # Install system dependencies, namely a very barebones ROS setup.
# before_install:
#   - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
#   - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
#   - sudo apt-get update -qq
#   - sudo apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin lcov
#   - source /opt/ros/$ROS_DISTRO/setup.bash
#   # Prepare rosdep to install dependencies.
#   - sudo rosdep init
#   - rosdep update

#   # OpenCV 3.2
#   - sudo apt-get install -y build-essential
#   - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
#   - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
#   - wget https://github.com/Itseez/opencv/archive/3.2.0.zip -O opencv-3.2.0.zip
#   - unzip opencv-3.2.0.zip
#   - cd opencv-3.2.0
#   - mkdir build
#   - cd build
#   - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..
#   - make -j4
#   - sudo make install
#   - sudo /bin/bash -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
#   - sudo ldconfig
#   - cd ../../

# # Create a catkin workspace with the package under integration.
# install:
#   - gem install coveralls-lcov
#   - mkdir -p ~/catkin_ws/src
#   - cd ~/catkin_ws/src
#   - catkin_init_workspace
#   # Create the devel/setup.bash (run catkin_make with an empty workspace) and
#   # source it to set the path variables.
#   - cd ~/catkin_ws
#   - catkin_make
#   - source devel/setup.bash
#   # Add the package under integration to the workspace using a symlink.
#   - cd ~/catkin_ws/src
#   - ln -s $CI_SOURCE_PATH .

# # Install all dependencies, using wstool first and rosdep second.
# # wstool looks for a ROSINSTALL_FILE defined in the environment variables.
# before_script:
#   # source dependencies: install using wstool.
#   - cd ~/catkin_ws/src
#   - wstool init
#   - if [[ -f $ROSINSTALL_FILE ]] ; then wstool merge $ROSINSTALL_FILE ; fi
#   - wstool up
#   # package depdencies: install using rosdep.
#   - cd ~/catkin_ws
#   - rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO

# # Compile and test (mark the build as failed if any step fails). If the
# # CATKIN_OPTIONS file exists, use it as an argument to catkin_make, for example
# # to blacklist certain packages.
# #
# # NOTE on testing: `catkin_make run_tests` will show the output of the tests
# # (gtest, nosetest, etc..) but always returns 0 (success) even if a test
# # fails. Running `catkin_test_results` aggregates all the results and returns
# # non-zero when a test fails (which notifies Travis the build failed).
# script:
#   - source /opt/ros/$ROS_DISTRO/setup.bash
#   - cd ~/catkin_ws
#   - catkin_make $( [ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS )
#   # Run the tests, ensuring the path is set correctly.
#   - source devel/setup.bash
#   - catkin_make run_tests && catkin_test_results

# after_success:
#   - cd ~/catkin_ws/build
#   - lcov --directory . --capture --output-file coverage.info
#   - lcov --remove coverage.info '/opt/*' '/usr/*' '*/devel/*' '*test_*' '*_test*' --output-file coverage.info
#   - lcov --list coverage.info
#   - coveralls-lcov coverage.info
